{"name": "test_Populate_TmpFile[testbed.yml]", "status": "broken", "statusDetails": {"message": "TypeError: must be str, not dict", "trace": "test_convert_yml_to_dict = {'Connection': {'DUT1': {'interfaces': [{'LocalPort': 'Ethernet1', 'RemoteDevice': 'DUT2', 'RemotePort': 'Ethernet11'}...'access': {'ip': '10.1.1.2', 'port': 22, 'protocol': 'ssh'}, 'credentials': {'password': 'onl', 'username': 'admin'}}}}\n\n    def test_Populate_TmpFile(test_convert_yml_to_dict):\n        global new_filename\n        temp = test_convert_yml_to_dict\n        print(temp)\n        temp1 = './../tmp/'\n        new_filename = temp1 + new_filename\n        print('\\n')\n        with open(new_filename, 'w+') as f:\n            DUT1_HwType = str(temp['HardwareList']['DUT1']['Hardware_type'])\n            DUT1_Protocol = str(temp['HardwareList']['DUT1']['access']['protocol'])\n            DUT1_IP = str(temp['HardwareList']['DUT1']['access']['ip'])\n            DUT1_Port = str(temp['HardwareList']['DUT1']['access']['port'])\n            DUT1_Username = str(temp['HardwareList']['DUT1']['credentials']['username'])\n            DUT1_Password = str(temp['HardwareList']['DUT1']['credentials']['password'])\n            DUT2_HwType = str(temp['HardwareList']['DUT2']['Hardware_type'])\n            DUT2_Protocol = str(temp['HardwareList']['DUT2']['access']['protocol'])\n            DUT2_IP = str(temp['HardwareList']['DUT2']['access']['ip'])\n            DUT2_Port = str(temp['HardwareList']['DUT2']['access']['port'])\n            DUT2_Username = str(temp['HardwareList']['DUT2']['credentials']['username'])\n            DUT2_Password = str(temp['HardwareList']['DUT2']['credentials']['password'])\n    \n            f.write(str('DUT1_HwType') + \"=\" + \"\\\"\" + DUT1_HwType + \"\\\"\" + '\\n')\n            f.write(str('DUT1_Protocol') + \"=\" + \"\\\"\" + DUT1_Protocol + \"\\\"\" + '\\n')\n            f.write(str('DUT1_IP') + \"=\" + \"\\\"\" + DUT1_IP + \"\\\"\" + '\\n')\n            f.write(str('DUT1_Username') + \"=\" + \"\\\"\" + DUT1_Username + \"\\\"\" + '\\n')\n            f.write(str('DUT1_Password') + \"=\" + \"\\\"\" + DUT1_Password + \"\\\"\" + '\\n')\n            f.write(str('DUT2_HwType') + \"=\" + \"\\\"\" + DUT2_HwType + \"\\\"\" + '\\n')\n            f.write(str('DUT2_Protocol') + \"=\" + \"\\\"\" + DUT2_Protocol + \"\\\"\" + '\\n')\n            f.write(str('DUT2_IP') + \"=\" + \"\\\"\" + DUT2_IP + \"\\\"\" + '\\n')\n            f.write(str('DUT2_Username') + \"=\" + \"\\\"\" + DUT2_Username + \"\\\"\" + '\\n')\n            f.write(str('DUT2_Password') + \"=\" + \"\\\"\" + DUT2_Password + \"\\\"\" + '\\n')\n    \n            if key == 1:\n    \n                DUT1interfaceList = temp['Connection']['DUT1']['interfaces']\n                DUT2interfaceList = temp['Connection']['DUT2']['interfaces']\n    \n                Trunk = dict()\n    \n                Trunk[1] = dict()\n                Trunk[1][2] = dict()\n    \n                Trunk[2] = dict()\n                Trunk[2][1] = dict()\n    \n>               f.write(str('Trunk[1]')  + \"=\" + dict() + '\\n')\nE               TypeError: must be str, not dict\n\ntest_testbed_file_parser.py:124: TypeError"}, "parameters": [{"name": "testbed", "value": "'testbed.yml'"}], "start": 1656243223951, "stop": 1656243223951, "uuid": "3cad8d1e-7f84-48bb-921e-77d279abff96", "historyId": "7fc9a49222a2f558b26bad411635e54d", "testCaseId": "361f77d1d20cb28fa38428ddf2d92161", "fullName": "test_testbed_file_parser#test_Populate_TmpFile", "labels": [{"name": "suite", "value": "test_testbed_file_parser"}, {"name": "host", "value": "alexander-Virtual-Machine"}, {"name": "thread", "value": "25465-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_testbed_file_parser"}]}