{"name": "test_CheckPSUState[testbed]", "status": "failed", "statusDetails": {"message": "AssertionError: -1 != 1 : Specified key is not present in the dictionary file", "trace": "test_importlib = <module 'testbed' from '/data/ONLP_Automation/tmp/testbed.py'>\n\n    @pytest.mark.All\n    @pytest.mark.Sanity\n    def test_CheckPSUState(test_importlib):\n    \n        DUTInfo = test_importlib\n        val = Get_PSU_Value(DUTInfo.DUT1_IP, 1, 'State')\n        val = -1\n    \n        obj = CheckKeyValue()\n    \n>       result = obj.KeyValueMatch(val)\n\n../Scripts/test_19.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Lib/KeyMatch.py:16: in KeyValueMatch\n    self.assertEqual(val, 1, msg=self.Failure_type(val))\n/usr/lib/python3.7/unittest/case.py:839: in assertEqual\n    assertion_func(first, second, msg=msg)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <KeyMatch.CheckKeyValue testMethod=runTest>, first = -1, second = 1\nmsg = '-1 != 1 : Specified key is not present in the dictionary file'\n\n    def _baseAssertEqual(self, first, second, msg=None):\n        \"\"\"The default assertEqual implementation, not type specific.\"\"\"\n        if not first == second:\n            standardMsg = '%s != %s' % _common_shorten_repr(first, second)\n            msg = self._formatMessage(msg, standardMsg)\n>           raise self.failureException(msg)\nE           AssertionError: -1 != 1 : Specified key is not present in the dictionary file\n\n/usr/lib/python3.7/unittest/case.py:832: AssertionError"}, "attachments": [{"name": "stdout", "source": "81b0f5ae-e931-47d7-9ded-fc66ca194e09-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "filename", "value": "'testbed'"}], "start": 1662279242626, "stop": 1662279243273, "uuid": "e984a1b7-77a7-44a9-8081-529947490808", "historyId": "8c1206d6096757ed0456c02289b6b374", "testCaseId": "d30f4867cc53cce2fcd8665155a6e5fb", "fullName": "test_19#test_CheckPSUState", "labels": [{"name": "tag", "value": "Sanity"}, {"name": "tag", "value": "All"}, {"name": "suite", "value": "test_19"}, {"name": "host", "value": "911e6075fbb9"}, {"name": "thread", "value": "4449-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_19"}]}